{
	"info": {
		"_postman_id": "a243405d-c8bc-47e4-aa85-59a8bfe3f849",
		"name": "VaultNTask",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26578771",
		"_collection_link": "https://galactic-comet-593247.postman.co/workspace/VaultNTask~86d067ca-f38b-431a-aa44-4dd562511650/collection/26578771-a243405d-c8bc-47e4-aa85-59a8bfe3f849?action=share&source=collection_link&creator=26578771"
	},
	"item": [
		{
			"name": "Create Board \"VaultN\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"boardId = pm.response.json().id;\r",
							"pm.collectionVariables.set(\"boardId\", boardId);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Check for Specific Values\r",
							"pm.test(\"Check the name of board\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"VaultN\");\r",
							"    pm.expect(jsonData.prefs.permissionLevel).to.eql(\"private\");\r",
							"    \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"defaultLists\": false  // I have added this in order to see my board without any list\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/1/boards/?name=VaultN&key={{apiKey}}&token={{apiToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "VaultN"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create List \"Backlog\" in Board \"VaultN\"",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"listId = pm.response.json().id;\r",
							"pm.collectionVariables.set(\"backlogListId\", listId);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"//response body validation\r",
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"ID is present\", function () {\r",
							"    pm.expect(jsonData).to.have.property('id');\r",
							"    pm.expect(jsonData.id).to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Name is correct\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Backlog\");\r",
							"});\r",
							"\r",
							"pm.test(\"Board ID matches\", function () {\r",
							"    pm.expect(jsonData.idBoard).to.eql(pm.variables.get(\"boardId\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Closed field is false\", function () {\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/lists?name=Backlog&idBoard={{boardId}}&key={{apiKey}}&token={{apiToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "Backlog"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create List \"Todo\" in Board \"VaultN\"",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"listId = pm.response.json().id;\r",
							"pm.collectionVariables.set(\"todoListId\", listId);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/lists?name=Todo&idBoard={{boardId}}&key={{apiKey}}&token={{apiToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "Todo"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create List \"Doing\" in Board \"VaultN\"",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"listId = pm.response.json().id;\r",
							"pm.collectionVariables.set(\"doingListId\", listId);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/lists?name=Doing&idBoard={{boardId}}&key={{apiKey}}&token={{apiToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "Doing"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create List \"Testing\" in Board \"VaultN\"",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"listId = pm.response.json().id;\r",
							"pm.collectionVariables.set(\"testingListId\", listId);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/lists?name=Testing&idBoard={{boardId}}&key={{apiKey}}&token={{apiToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "Testing"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create List \"Done\" in Board \"VaultN\"",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"listId = pm.response.json().id;\r",
							"pm.collectionVariables.set(\"doneListId\", listId);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/lists?name=Done&idBoard={{boardId}}&key={{apiKey}}&token={{apiToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "Done"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Card \"Sign up for Trello\" in List \"Todo\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"signUpforTrelloCard = pm.response.json().id;\r",
							"    pm.collectionVariables.set(\"signUpForTrelloId\", signUpforTrelloCard);\r",
							"\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"\r",
							"\r",
							"    //Check Response Structure and Data Types\r",
							"    pm.test(\"Response has correct structure\", function () {\r",
							"        const jsonData = pm.response.json();\r",
							"        pm.expect(jsonData).to.have.property(\"id\").that.is.a(\"string\");\r",
							"        pm.expect(jsonData).to.have.property(\"name\").that.is.a(\"string\");\r",
							"        pm.expect(jsonData).to.have.property(\"url\").that.is.a(\"string\");\r",
							"        pm.expect(jsonData.badges).to.have.property(\"attachments\").that.is.a(\"number\");\r",
							"    });\r",
							"\r",
							"    //Validate Specific Field Values\r",
							"    pm.test(\"Check specific field values\", function () {\r",
							"        const jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.idBoard).to.equal(pm.collectionVariables.get(\"boardId\"));\r",
							"        pm.expect(jsonData.closed).to.be.false;\r",
							"    });"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/1/cards?idList={{todoListId}}&key={{apiKey}}&token={{apiToken}}&name=Sign up for Trello",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{todoListId}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						},
						{
							"key": "name",
							"value": "Sign up for Trello"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Card \"Get key and token\" in List \"Todo\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"getKeyAndToken = pm.response.json().id;\r",
							"pm.collectionVariables.set(\"getKeyAndToken\", getKeyAndToken);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/1/cards?idList={{todoListId}}&key={{apiKey}}&token={{apiToken}}&name=Get key and token",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{todoListId}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						},
						{
							"key": "name",
							"value": "Get key and token"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Card \"Build a collection\" in List \"Todo\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"buildACollection = pm.response.json().id;\r",
							"pm.collectionVariables.set(\"buildACollection\", buildACollection);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/1/cards?idList={{todoListId}}&key={{apiKey}}&token={{apiToken}}&name=Build a collection",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{todoListId}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						},
						{
							"key": "name",
							"value": "Build a collection"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Card \"Working on Task\" in List \"Todo\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"workingOnTask = pm.response.json().id;\r",
							"pm.collectionVariables.set(\"workingOnTask\", workingOnTask);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/1/cards?idList={{todoListId}}&key={{apiKey}}&token={{apiToken}}&name=Working on Task",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{todoListId}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						},
						{
							"key": "name",
							"value": "Working on Task"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Card \"UI Automation\" in List \"Backlog\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/1/cards?idList={{backlogListId}}&key={{apiKey}}&token={{apiToken}}&name=UI Automation",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{backlogListId}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						},
						{
							"key": "name",
							"value": "UI Automation"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Card \"Writing Test Scenarios\" in List \"Backlog\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/1/cards?idList={{backlogListId}}&key={{apiKey}}&token={{apiToken}}&name=Writing Test Scenarios",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{backlogListId}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						},
						{
							"key": "name",
							"value": "Writing Test Scenarios"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move Card \"Sign up for Trello\" to List \"Done\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"// Response structure validation",
							"pm.test(\"Response structure is valid\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"name\");",
							"    pm.expect(jsonData.badges).to.have.property(\"attachmentsByType\");",
							"    pm.expect(jsonData).to.have.property(\"url\");",
							"});",
							"",
							"// Field value validation",
							"pm.test(\"Field values are as expected\", function () {",
							"    const jsonData = pm.response.json(); ",
							"    pm.expect(jsonData.closed).to.be.false;",
							"    pm.expect(jsonData.dueComplete).to.be.false;",
							"    pm.expect(jsonData.badges.votes).to.equal(0);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/1/cards/{{signUpForTrelloId}}?key={{apiKey}}&token={{apiToken}}&idList={{doneListId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards",
						"{{signUpForTrelloId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						},
						{
							"key": "idList",
							"value": "{{doneListId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move Card \"Get key and token\" to List \"Testing\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/cards/{{getKeyAndToken}}?key={{apiKey}}&token={{apiToken}}&idList={{testingListId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards",
						"{{getKeyAndToken}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						},
						{
							"key": "idList",
							"value": "{{testingListId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move Card \"Build a collection\" to List \"Doing\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/cards/{{buildACollection}}?key={{apiKey}}&token={{apiToken}}&idList={{doingListId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards",
						"{{buildACollection}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						},
						{
							"key": "idList",
							"value": "{{doingListId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move Card \"Working on Task\" to List \"Doing\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/1/cards/{{workingOnTask}}?key={{apiKey}}&token={{apiToken}}&idList={{doingListId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards",
						"{{workingOnTask}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						},
						{
							"key": "idList",
							"value": "{{doingListId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Board \"VaultN\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Validate _value is null\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    \r",
							"    // Check if the _value field exists and is null\r",
							"    pm.expect(jsonData).to.have.property(\"_value\").that.is.null;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/{{boardId}}/?key={{apiKey}}&token={{apiToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						"{{boardId}}",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{apiToken}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "boardId",
			"value": ""
		},
		{
			"key": "listId",
			"value": ""
		},
		{
			"key": "listNames",
			"value": ""
		},
		{
			"key": "backlogListId",
			"value": ""
		},
		{
			"key": "todoListId",
			"value": ""
		},
		{
			"key": "doneListId",
			"value": ""
		},
		{
			"key": "signUpForTrelloId",
			"value": ""
		},
		{
			"key": "getKeyAndToken",
			"value": ""
		},
		{
			"key": "testingListId",
			"value": ""
		},
		{
			"key": "doingListId",
			"value": ""
		},
		{
			"key": "buildACollection",
			"value": ""
		},
		{
			"key": "workingOnTask",
			"value": ""
		}
	]
}